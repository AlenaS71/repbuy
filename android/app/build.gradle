plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id "com.google.gms.google-services"
    id "com.google.firebase.crashlytics"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode') ?: '1'
def flutterVersionName = localProperties.getProperty('flutter.versionName') ?: '1.0'
def minSdkVersions = localProperties.getProperty('flutter.minSdkVersion') ?: '21' // Default to a safe min SDK
def targetSdkVersions = localProperties.getProperty('flutter.targetSdkVersion') ?: '34' // Update to a modern target SDK

android {
    namespace "com.example.shapmanpaypoint"
    compileSdkVersion 34 // Make sure this matches your desired SDK
    ndkVersion "26.1.10909125" // Update as needed or remove if not using native code

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = "17"
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.example.shapmanpaypoint"
        minSdkVersion minSdkVersions.toInteger() // Convert to integer
        targetSdkVersion targetSdkVersions.toInteger()
        multiDexEnabled true  // Convert to integer
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        release {
            // Use your release signing config
            signingConfig signingConfigs.debug
            // Add ProGuard rules if needed
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.9.0"
    // Import the Firebase BoM to manage Firebase dependencies
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.3'
    implementation platform('com.google.firebase:firebase-bom:32.8.0')
    implementation 'com.google.firebase:firebase-analytics'
    implementation "androidx.multidex:multidex:2.0.1"

    // Remove google-services from dependencies as it's a plugin, not a dependency
}
